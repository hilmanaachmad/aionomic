/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.math.BigInteger;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

public class GenerateRfqrefRequest implements Serializable {


    @JsonProperty("rfqRef")
    private String rfqRef;

    @JsonProperty("rfqId")
    @NotNull
    private BigInteger rfqId;

    public String getRfqRef() {
        return this.rfqRef;
    }

    public void setRfqRef(String rfqRef) {
        this.rfqRef = rfqRef;
    }

    public BigInteger getRfqId() {
        return this.rfqId;
    }

    public void setRfqId(BigInteger rfqId) {
        this.rfqId = rfqId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GenerateRfqrefRequest)) return false;
        final GenerateRfqrefRequest generateRfqrefRequest = (GenerateRfqrefRequest) o;
        return Objects.equals(getRfqRef(), generateRfqrefRequest.getRfqRef()) &&
                Objects.equals(getRfqId(), generateRfqrefRequest.getRfqId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getRfqRef(),
                getRfqId());
    }
}