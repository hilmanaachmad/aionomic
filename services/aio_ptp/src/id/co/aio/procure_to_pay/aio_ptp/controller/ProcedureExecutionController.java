/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import id.co.aio.procure_to_pay.aio_ptp.service.Aio_ptpProcedureExecutorService;
import id.co.aio.procure_to_pay.aio_ptp.models.procedure.*;

@RestController(value = "Aio_ptp.ProcedureExecutionController")
@RequestMapping("/aio_ptp/procedureExecutor")
@Api(value = "ProcedureExecutionController", description = "controller class for procedure execution")
public class ProcedureExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ProcedureExecutionController.class);

    @Autowired
    private Aio_ptpProcedureExecutorService procedureService;

    @RequestMapping(value = "/procedure/execute/sp_usage_budgetDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "SP usage budget detail")
    public SpUsageBudgetDetailsResponse executeSp_usage_budgetDetails(@RequestParam(value = "bh_id") String bhId, @RequestParam(value = "type_data") String typeData, @RequestParam(value = "value_beginning") String valueBeginning, @RequestParam(value = "value_adjustment") String valueAdjustment, @RequestParam(value = "value_reserve") String valueReserve, @RequestParam(value = "value_commitment") String valueCommitment, @RequestParam(value = "value_actual") String valueActual, @RequestParam(value = "created_at_start") String createdAtStart, @RequestParam(value = "created_at_end") String createdAtEnd, @RequestParam(value = "created_by") String createdBy, @RequestParam(value = "coa") String coa, @RequestParam(value = "remarks") String remarks, @RequestParam(value = "docNumber") String docNumber, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: sp_usage_budgetDetails");
        SpUsageBudgetDetailsResponse _result = procedureService.executeSp_usage_budgetDetails(bhId, typeData, valueBeginning, valueAdjustment, valueReserve, valueCommitment, valueActual, createdAtStart, createdAtEnd, createdBy, coa, remarks, docNumber);
        LOGGER.debug("got the result for named procedure: sp_usage_budgetDetails, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/sp_budgetDetail2", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Store Procedure Budget Detail 2")
    public SpBudgetDetail2Response executeSp_budgetDetail2(@RequestParam(value = "bh_id") String bhId, @RequestParam(value = "type_data") String typeData, @RequestParam(value = "value_beginning") String valueBeginning, @RequestParam(value = "value_adjustment") String valueAdjustment, @RequestParam(value = "value_reclass") String valueReclass, @RequestParam(value = "value_additional") String valueAdditional, @RequestParam(value = "created_at_start") String createdAtStart, @RequestParam(value = "created_at_end") String createdAtEnd, @RequestParam(value = "created_by") String createdBy, @RequestParam(value = "coa") String coa, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: sp_budgetDetail2");
        SpBudgetDetail2Response _result = procedureService.executeSp_budgetDetail2(bhId, typeData, valueBeginning, valueAdjustment, valueReclass, valueAdditional, createdAtStart, createdAtEnd, createdBy, coa);
        LOGGER.debug("got the result for named procedure: sp_budgetDetail2, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/spBudgetDetail1", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ambil budget detail 1")
    public SpBudgetDetail1Response executeSpBudgetDetail1(@RequestParam(value = "acc_type") String accType, @RequestParam(value = "comp") String comp, @RequestParam(value = "brand") String brand, @RequestParam(value = "dep") String dep, @RequestParam(value = "emp") String emp, @RequestParam(value = "year") String year, @RequestParam(value = "admin") String admin, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: spBudgetDetail1");
        SpBudgetDetail1Response _result = procedureService.executeSpBudgetDetail1(accType, comp, brand, dep, emp, year, admin);
        LOGGER.debug("got the result for named procedure: spBudgetDetail1, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/sp_budgetDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "New SP Budget Detail 2")
    public SpBudgetDetailsResponse executeSp_budgetDetails(@RequestParam(value = "bh_id") String bhId, @RequestParam(value = "type_data") String typeData, @RequestParam(value = "value_beginning") String valueBeginning, @RequestParam(value = "value_adjustment") String valueAdjustment, @RequestParam(value = "value_reclass") String valueReclass, @RequestParam(value = "value_additional") String valueAdditional, @RequestParam(value = "created_at_start") String createdAtStart, @RequestParam(value = "created_at_end") String createdAtEnd, @RequestParam(value = "created_by") String createdBy, @RequestParam(value = "coa") String coa, @RequestParam(value = "remarks") String remarks, @RequestParam(value = "docNumber") String docNumber, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: sp_budgetDetails");
        SpBudgetDetailsResponse _result = procedureService.executeSp_budgetDetails(bhId, typeData, valueBeginning, valueAdjustment, valueReclass, valueAdditional, createdAtStart, createdAtEnd, createdBy, coa, remarks, docNumber);
        LOGGER.debug("got the result for named procedure: sp_budgetDetails, result:{}", _result);
        return _result;
    }

}