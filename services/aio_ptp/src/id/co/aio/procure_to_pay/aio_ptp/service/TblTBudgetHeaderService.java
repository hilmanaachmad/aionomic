/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblTBudgetDetails;
import id.co.aio.procure_to_pay.aio_ptp.TblTBudgetHeader;
import id.co.aio.procure_to_pay.aio_ptp.TblTPrLineItem;

/**
 * Service object for domain model class {@link TblTBudgetHeader}.
 */
public interface TblTBudgetHeaderService {

    /**
     * Creates a new TblTBudgetHeader. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetHeader if any.
     *
     * @param tblTbudgetHeader Details of the TblTBudgetHeader to be created; value cannot be null.
     * @return The newly created TblTBudgetHeader.
     */
    TblTBudgetHeader create(@Valid TblTBudgetHeader tblTbudgetHeader);


	/**
     * Returns TblTBudgetHeader by given id if exists.
     *
     * @param tbltbudgetheaderId The id of the TblTBudgetHeader to get; value cannot be null.
     * @return TblTBudgetHeader associated with the given tbltbudgetheaderId.
	 * @throws EntityNotFoundException If no TblTBudgetHeader is found.
     */
    TblTBudgetHeader getById(Integer tbltbudgetheaderId);

    /**
     * Find and return the TblTBudgetHeader by given id if exists, returns null otherwise.
     *
     * @param tbltbudgetheaderId The id of the TblTBudgetHeader to get; value cannot be null.
     * @return TblTBudgetHeader associated with the given tbltbudgetheaderId.
     */
    TblTBudgetHeader findById(Integer tbltbudgetheaderId);

	/**
     * Find and return the list of TblTBudgetHeaders by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tbltbudgetheaderIds The id's of the TblTBudgetHeader to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblTBudgetHeaders associated with the given tbltbudgetheaderIds.
     */
    List<TblTBudgetHeader> findByMultipleIds(List<Integer> tbltbudgetheaderIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblTBudgetHeader. It replaces all fields of the existing TblTBudgetHeader with the given tblTbudgetHeader.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetHeader if any.
     *
     * @param tblTbudgetHeader The details of the TblTBudgetHeader to be updated; value cannot be null.
     * @return The updated TblTBudgetHeader.
     * @throws EntityNotFoundException if no TblTBudgetHeader is found with given input.
     */
    TblTBudgetHeader update(@Valid TblTBudgetHeader tblTbudgetHeader);


    /**
     * Partially updates the details of an existing TblTBudgetHeader. It updates only the
     * fields of the existing TblTBudgetHeader which are passed in the tblTbudgetHeaderPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetHeader if any.
     *
     * @param tbltbudgetheaderId The id of the TblTBudgetHeader to be deleted; value cannot be null.
     * @param tblTbudgetHeaderPatch The partial data of TblTBudgetHeader which is supposed to be updated; value cannot be null.
     * @return The updated TblTBudgetHeader.
     * @throws EntityNotFoundException if no TblTBudgetHeader is found with given input.
     */
    TblTBudgetHeader partialUpdate(Integer tbltbudgetheaderId, Map<String, Object> tblTbudgetHeaderPatch);

    /**
     * Deletes an existing TblTBudgetHeader with the given id.
     *
     * @param tbltbudgetheaderId The id of the TblTBudgetHeader to be deleted; value cannot be null.
     * @return The deleted TblTBudgetHeader.
     * @throws EntityNotFoundException if no TblTBudgetHeader found with the given id.
     */
    TblTBudgetHeader delete(Integer tbltbudgetheaderId);

    /**
     * Deletes an existing TblTBudgetHeader with the given object.
     *
     * @param tblTbudgetHeader The instance of the TblTBudgetHeader to be deleted; value cannot be null.
     */
    void delete(TblTBudgetHeader tblTbudgetHeader);

    /**
     * Find all TblTBudgetHeaders matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetHeaders.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblTBudgetHeader> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblTBudgetHeaders matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetHeaders.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTBudgetHeader> findAll(String query, Pageable pageable);

    /**
     * Exports all TblTBudgetHeaders matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblTBudgetHeaders matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblTBudgetHeaders in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblTBudgetHeader.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);

    /*
     * Returns the associated tblTbudgetDetailses for given TblTBudgetHeader id.
     *
     * @param bhId value of bhId; value cannot be null
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of associated TblTBudgetDetails instances.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTBudgetDetails> findAssociatedTblTbudgetDetailses(Integer bhId, Pageable pageable);

    /*
     * Returns the associated tblTprLineItems for given TblTBudgetHeader id.
     *
     * @param bhId value of bhId; value cannot be null
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of associated TblTPrLineItem instances.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTPrLineItem> findAssociatedTblTprLineItems(Integer bhId, Pageable pageable);

}