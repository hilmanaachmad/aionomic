/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.VGrQuantityDelivery;

/**
 * Service object for domain model class {@link VGrQuantityDelivery}.
 */
public interface VGrQuantityDeliveryService {

    /**
     * Creates a new VGrQuantityDelivery. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on VGrQuantityDelivery if any.
     *
     * @param vgrQuantityDelivery Details of the VGrQuantityDelivery to be created; value cannot be null.
     * @return The newly created VGrQuantityDelivery.
     */
    VGrQuantityDelivery create(@Valid VGrQuantityDelivery vgrQuantityDelivery);


	/**
     * Returns VGrQuantityDelivery by given id if exists.
     *
     * @param vgrquantitydeliveryId The id of the VGrQuantityDelivery to get; value cannot be null.
     * @return VGrQuantityDelivery associated with the given vgrquantitydeliveryId.
	 * @throws EntityNotFoundException If no VGrQuantityDelivery is found.
     */
    VGrQuantityDelivery getById(Integer vgrquantitydeliveryId);

    /**
     * Find and return the VGrQuantityDelivery by given id if exists, returns null otherwise.
     *
     * @param vgrquantitydeliveryId The id of the VGrQuantityDelivery to get; value cannot be null.
     * @return VGrQuantityDelivery associated with the given vgrquantitydeliveryId.
     */
    VGrQuantityDelivery findById(Integer vgrquantitydeliveryId);

	/**
     * Find and return the list of VGrQuantityDeliveries by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param vgrquantitydeliveryIds The id's of the VGrQuantityDelivery to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return VGrQuantityDeliveries associated with the given vgrquantitydeliveryIds.
     */
    List<VGrQuantityDelivery> findByMultipleIds(List<Integer> vgrquantitydeliveryIds, boolean orderedReturn);


    /**
     * Updates the details of an existing VGrQuantityDelivery. It replaces all fields of the existing VGrQuantityDelivery with the given vgrQuantityDelivery.
     *
     * This method overrides the input field values using Server side or database managed properties defined on VGrQuantityDelivery if any.
     *
     * @param vgrQuantityDelivery The details of the VGrQuantityDelivery to be updated; value cannot be null.
     * @return The updated VGrQuantityDelivery.
     * @throws EntityNotFoundException if no VGrQuantityDelivery is found with given input.
     */
    VGrQuantityDelivery update(@Valid VGrQuantityDelivery vgrQuantityDelivery);


    /**
     * Partially updates the details of an existing VGrQuantityDelivery. It updates only the
     * fields of the existing VGrQuantityDelivery which are passed in the vgrQuantityDeliveryPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on VGrQuantityDelivery if any.
     *
     * @param vgrquantitydeliveryId The id of the VGrQuantityDelivery to be deleted; value cannot be null.
     * @param vgrQuantityDeliveryPatch The partial data of VGrQuantityDelivery which is supposed to be updated; value cannot be null.
     * @return The updated VGrQuantityDelivery.
     * @throws EntityNotFoundException if no VGrQuantityDelivery is found with given input.
     */
    VGrQuantityDelivery partialUpdate(Integer vgrquantitydeliveryId, Map<String, Object> vgrQuantityDeliveryPatch);

    /**
     * Deletes an existing VGrQuantityDelivery with the given id.
     *
     * @param vgrquantitydeliveryId The id of the VGrQuantityDelivery to be deleted; value cannot be null.
     * @return The deleted VGrQuantityDelivery.
     * @throws EntityNotFoundException if no VGrQuantityDelivery found with the given id.
     */
    VGrQuantityDelivery delete(Integer vgrquantitydeliveryId);

    /**
     * Deletes an existing VGrQuantityDelivery with the given object.
     *
     * @param vgrQuantityDelivery The instance of the VGrQuantityDelivery to be deleted; value cannot be null.
     */
    void delete(VGrQuantityDelivery vgrQuantityDelivery);

    /**
     * Find all VGrQuantityDeliveries matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching VGrQuantityDeliveries.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<VGrQuantityDelivery> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all VGrQuantityDeliveries matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching VGrQuantityDeliveries.
     *
     * @see Pageable
     * @see Page
     */
    Page<VGrQuantityDelivery> findAll(String query, Pageable pageable);

    /**
     * Exports all VGrQuantityDeliveries matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all VGrQuantityDeliveries matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the VGrQuantityDeliveries in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the VGrQuantityDelivery.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}