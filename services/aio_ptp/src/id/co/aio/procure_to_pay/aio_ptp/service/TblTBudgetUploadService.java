/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblTBudgetHeader;
import id.co.aio.procure_to_pay.aio_ptp.TblTBudgetUpload;

/**
 * Service object for domain model class {@link TblTBudgetUpload}.
 */
public interface TblTBudgetUploadService {

    /**
     * Creates a new TblTBudgetUpload. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUpload if any.
     *
     * @param tblTbudgetUpload Details of the TblTBudgetUpload to be created; value cannot be null.
     * @return The newly created TblTBudgetUpload.
     */
    TblTBudgetUpload create(@Valid TblTBudgetUpload tblTbudgetUpload);


	/**
     * Returns TblTBudgetUpload by given id if exists.
     *
     * @param tbltbudgetuploadId The id of the TblTBudgetUpload to get; value cannot be null.
     * @return TblTBudgetUpload associated with the given tbltbudgetuploadId.
	 * @throws EntityNotFoundException If no TblTBudgetUpload is found.
     */
    TblTBudgetUpload getById(Integer tbltbudgetuploadId);

    /**
     * Find and return the TblTBudgetUpload by given id if exists, returns null otherwise.
     *
     * @param tbltbudgetuploadId The id of the TblTBudgetUpload to get; value cannot be null.
     * @return TblTBudgetUpload associated with the given tbltbudgetuploadId.
     */
    TblTBudgetUpload findById(Integer tbltbudgetuploadId);

	/**
     * Find and return the list of TblTBudgetUploads by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tbltbudgetuploadIds The id's of the TblTBudgetUpload to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblTBudgetUploads associated with the given tbltbudgetuploadIds.
     */
    List<TblTBudgetUpload> findByMultipleIds(List<Integer> tbltbudgetuploadIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblTBudgetUpload. It replaces all fields of the existing TblTBudgetUpload with the given tblTbudgetUpload.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUpload if any.
     *
     * @param tblTbudgetUpload The details of the TblTBudgetUpload to be updated; value cannot be null.
     * @return The updated TblTBudgetUpload.
     * @throws EntityNotFoundException if no TblTBudgetUpload is found with given input.
     */
    TblTBudgetUpload update(@Valid TblTBudgetUpload tblTbudgetUpload);


    /**
     * Partially updates the details of an existing TblTBudgetUpload. It updates only the
     * fields of the existing TblTBudgetUpload which are passed in the tblTbudgetUploadPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUpload if any.
     *
     * @param tbltbudgetuploadId The id of the TblTBudgetUpload to be deleted; value cannot be null.
     * @param tblTbudgetUploadPatch The partial data of TblTBudgetUpload which is supposed to be updated; value cannot be null.
     * @return The updated TblTBudgetUpload.
     * @throws EntityNotFoundException if no TblTBudgetUpload is found with given input.
     */
    TblTBudgetUpload partialUpdate(Integer tbltbudgetuploadId, Map<String, Object> tblTbudgetUploadPatch);

    /**
     * Deletes an existing TblTBudgetUpload with the given id.
     *
     * @param tbltbudgetuploadId The id of the TblTBudgetUpload to be deleted; value cannot be null.
     * @return The deleted TblTBudgetUpload.
     * @throws EntityNotFoundException if no TblTBudgetUpload found with the given id.
     */
    TblTBudgetUpload delete(Integer tbltbudgetuploadId);

    /**
     * Deletes an existing TblTBudgetUpload with the given object.
     *
     * @param tblTbudgetUpload The instance of the TblTBudgetUpload to be deleted; value cannot be null.
     */
    void delete(TblTBudgetUpload tblTbudgetUpload);

    /**
     * Find all TblTBudgetUploads matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetUploads.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblTBudgetUpload> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblTBudgetUploads matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetUploads.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTBudgetUpload> findAll(String query, Pageable pageable);

    /**
     * Exports all TblTBudgetUploads matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblTBudgetUploads matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblTBudgetUploads in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblTBudgetUpload.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);

    /*
     * Returns the associated tblTbudgetHeaders for given TblTBudgetUpload id.
     *
     * @param buId value of buId; value cannot be null
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of associated TblTBudgetHeader instances.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTBudgetHeader> findAssociatedTblTbudgetHeaders(Integer buId, Pageable pageable);

}