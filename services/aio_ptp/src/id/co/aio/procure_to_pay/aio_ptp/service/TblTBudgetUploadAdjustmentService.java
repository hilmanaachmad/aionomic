/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblTBudgetUploadAdjustment;

/**
 * Service object for domain model class {@link TblTBudgetUploadAdjustment}.
 */
public interface TblTBudgetUploadAdjustmentService {

    /**
     * Creates a new TblTBudgetUploadAdjustment. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUploadAdjustment if any.
     *
     * @param tblTbudgetUploadAdjustment Details of the TblTBudgetUploadAdjustment to be created; value cannot be null.
     * @return The newly created TblTBudgetUploadAdjustment.
     */
    TblTBudgetUploadAdjustment create(@Valid TblTBudgetUploadAdjustment tblTbudgetUploadAdjustment);


	/**
     * Returns TblTBudgetUploadAdjustment by given id if exists.
     *
     * @param tbltbudgetuploadadjustmentId The id of the TblTBudgetUploadAdjustment to get; value cannot be null.
     * @return TblTBudgetUploadAdjustment associated with the given tbltbudgetuploadadjustmentId.
	 * @throws EntityNotFoundException If no TblTBudgetUploadAdjustment is found.
     */
    TblTBudgetUploadAdjustment getById(Integer tbltbudgetuploadadjustmentId);

    /**
     * Find and return the TblTBudgetUploadAdjustment by given id if exists, returns null otherwise.
     *
     * @param tbltbudgetuploadadjustmentId The id of the TblTBudgetUploadAdjustment to get; value cannot be null.
     * @return TblTBudgetUploadAdjustment associated with the given tbltbudgetuploadadjustmentId.
     */
    TblTBudgetUploadAdjustment findById(Integer tbltbudgetuploadadjustmentId);

	/**
     * Find and return the list of TblTBudgetUploadAdjustments by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tbltbudgetuploadadjustmentIds The id's of the TblTBudgetUploadAdjustment to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblTBudgetUploadAdjustments associated with the given tbltbudgetuploadadjustmentIds.
     */
    List<TblTBudgetUploadAdjustment> findByMultipleIds(List<Integer> tbltbudgetuploadadjustmentIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblTBudgetUploadAdjustment. It replaces all fields of the existing TblTBudgetUploadAdjustment with the given tblTbudgetUploadAdjustment.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUploadAdjustment if any.
     *
     * @param tblTbudgetUploadAdjustment The details of the TblTBudgetUploadAdjustment to be updated; value cannot be null.
     * @return The updated TblTBudgetUploadAdjustment.
     * @throws EntityNotFoundException if no TblTBudgetUploadAdjustment is found with given input.
     */
    TblTBudgetUploadAdjustment update(@Valid TblTBudgetUploadAdjustment tblTbudgetUploadAdjustment);


    /**
     * Partially updates the details of an existing TblTBudgetUploadAdjustment. It updates only the
     * fields of the existing TblTBudgetUploadAdjustment which are passed in the tblTbudgetUploadAdjustmentPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTBudgetUploadAdjustment if any.
     *
     * @param tbltbudgetuploadadjustmentId The id of the TblTBudgetUploadAdjustment to be deleted; value cannot be null.
     * @param tblTbudgetUploadAdjustmentPatch The partial data of TblTBudgetUploadAdjustment which is supposed to be updated; value cannot be null.
     * @return The updated TblTBudgetUploadAdjustment.
     * @throws EntityNotFoundException if no TblTBudgetUploadAdjustment is found with given input.
     */
    TblTBudgetUploadAdjustment partialUpdate(Integer tbltbudgetuploadadjustmentId, Map<String, Object> tblTbudgetUploadAdjustmentPatch);

    /**
     * Deletes an existing TblTBudgetUploadAdjustment with the given id.
     *
     * @param tbltbudgetuploadadjustmentId The id of the TblTBudgetUploadAdjustment to be deleted; value cannot be null.
     * @return The deleted TblTBudgetUploadAdjustment.
     * @throws EntityNotFoundException if no TblTBudgetUploadAdjustment found with the given id.
     */
    TblTBudgetUploadAdjustment delete(Integer tbltbudgetuploadadjustmentId);

    /**
     * Deletes an existing TblTBudgetUploadAdjustment with the given object.
     *
     * @param tblTbudgetUploadAdjustment The instance of the TblTBudgetUploadAdjustment to be deleted; value cannot be null.
     */
    void delete(TblTBudgetUploadAdjustment tblTbudgetUploadAdjustment);

    /**
     * Find all TblTBudgetUploadAdjustments matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetUploadAdjustments.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblTBudgetUploadAdjustment> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblTBudgetUploadAdjustments matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTBudgetUploadAdjustments.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTBudgetUploadAdjustment> findAll(String query, Pageable pageable);

    /**
     * Exports all TblTBudgetUploadAdjustments matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblTBudgetUploadAdjustments matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblTBudgetUploadAdjustments in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblTBudgetUploadAdjustment.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}