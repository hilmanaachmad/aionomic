/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblMEmpPriceLimit;

/**
 * Service object for domain model class {@link TblMEmpPriceLimit}.
 */
public interface TblMEmpPriceLimitService {

    /**
     * Creates a new TblMEmpPriceLimit. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMEmpPriceLimit if any.
     *
     * @param tblMempPriceLimit Details of the TblMEmpPriceLimit to be created; value cannot be null.
     * @return The newly created TblMEmpPriceLimit.
     */
    TblMEmpPriceLimit create(@Valid TblMEmpPriceLimit tblMempPriceLimit);


	/**
     * Returns TblMEmpPriceLimit by given id if exists.
     *
     * @param tblmemppricelimitId The id of the TblMEmpPriceLimit to get; value cannot be null.
     * @return TblMEmpPriceLimit associated with the given tblmemppricelimitId.
	 * @throws EntityNotFoundException If no TblMEmpPriceLimit is found.
     */
    TblMEmpPriceLimit getById(Integer tblmemppricelimitId);

    /**
     * Find and return the TblMEmpPriceLimit by given id if exists, returns null otherwise.
     *
     * @param tblmemppricelimitId The id of the TblMEmpPriceLimit to get; value cannot be null.
     * @return TblMEmpPriceLimit associated with the given tblmemppricelimitId.
     */
    TblMEmpPriceLimit findById(Integer tblmemppricelimitId);

	/**
     * Find and return the list of TblMEmpPriceLimits by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tblmemppricelimitIds The id's of the TblMEmpPriceLimit to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblMEmpPriceLimits associated with the given tblmemppricelimitIds.
     */
    List<TblMEmpPriceLimit> findByMultipleIds(List<Integer> tblmemppricelimitIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblMEmpPriceLimit. It replaces all fields of the existing TblMEmpPriceLimit with the given tblMempPriceLimit.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMEmpPriceLimit if any.
     *
     * @param tblMempPriceLimit The details of the TblMEmpPriceLimit to be updated; value cannot be null.
     * @return The updated TblMEmpPriceLimit.
     * @throws EntityNotFoundException if no TblMEmpPriceLimit is found with given input.
     */
    TblMEmpPriceLimit update(@Valid TblMEmpPriceLimit tblMempPriceLimit);


    /**
     * Partially updates the details of an existing TblMEmpPriceLimit. It updates only the
     * fields of the existing TblMEmpPriceLimit which are passed in the tblMempPriceLimitPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMEmpPriceLimit if any.
     *
     * @param tblmemppricelimitId The id of the TblMEmpPriceLimit to be deleted; value cannot be null.
     * @param tblMempPriceLimitPatch The partial data of TblMEmpPriceLimit which is supposed to be updated; value cannot be null.
     * @return The updated TblMEmpPriceLimit.
     * @throws EntityNotFoundException if no TblMEmpPriceLimit is found with given input.
     */
    TblMEmpPriceLimit partialUpdate(Integer tblmemppricelimitId, Map<String, Object> tblMempPriceLimitPatch);

    /**
     * Deletes an existing TblMEmpPriceLimit with the given id.
     *
     * @param tblmemppricelimitId The id of the TblMEmpPriceLimit to be deleted; value cannot be null.
     * @return The deleted TblMEmpPriceLimit.
     * @throws EntityNotFoundException if no TblMEmpPriceLimit found with the given id.
     */
    TblMEmpPriceLimit delete(Integer tblmemppricelimitId);

    /**
     * Deletes an existing TblMEmpPriceLimit with the given object.
     *
     * @param tblMempPriceLimit The instance of the TblMEmpPriceLimit to be deleted; value cannot be null.
     */
    void delete(TblMEmpPriceLimit tblMempPriceLimit);

    /**
     * Find all TblMEmpPriceLimits matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblMEmpPriceLimits.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblMEmpPriceLimit> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblMEmpPriceLimits matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblMEmpPriceLimits.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblMEmpPriceLimit> findAll(String query, Pageable pageable);

    /**
     * Exports all TblMEmpPriceLimits matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblMEmpPriceLimits matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblMEmpPriceLimits in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblMEmpPriceLimit.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}