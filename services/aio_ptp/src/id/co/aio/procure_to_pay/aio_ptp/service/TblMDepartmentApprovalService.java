/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblMDepartmentApproval;

/**
 * Service object for domain model class {@link TblMDepartmentApproval}.
 */
public interface TblMDepartmentApprovalService {

    /**
     * Creates a new TblMDepartmentApproval. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMDepartmentApproval if any.
     *
     * @param tblMdepartmentApproval Details of the TblMDepartmentApproval to be created; value cannot be null.
     * @return The newly created TblMDepartmentApproval.
     */
    TblMDepartmentApproval create(@Valid TblMDepartmentApproval tblMdepartmentApproval);


	/**
     * Returns TblMDepartmentApproval by given id if exists.
     *
     * @param tblmdepartmentapprovalId The id of the TblMDepartmentApproval to get; value cannot be null.
     * @return TblMDepartmentApproval associated with the given tblmdepartmentapprovalId.
	 * @throws EntityNotFoundException If no TblMDepartmentApproval is found.
     */
    TblMDepartmentApproval getById(Integer tblmdepartmentapprovalId);

    /**
     * Find and return the TblMDepartmentApproval by given id if exists, returns null otherwise.
     *
     * @param tblmdepartmentapprovalId The id of the TblMDepartmentApproval to get; value cannot be null.
     * @return TblMDepartmentApproval associated with the given tblmdepartmentapprovalId.
     */
    TblMDepartmentApproval findById(Integer tblmdepartmentapprovalId);

	/**
     * Find and return the list of TblMDepartmentApprovals by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tblmdepartmentapprovalIds The id's of the TblMDepartmentApproval to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblMDepartmentApprovals associated with the given tblmdepartmentapprovalIds.
     */
    List<TblMDepartmentApproval> findByMultipleIds(List<Integer> tblmdepartmentapprovalIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblMDepartmentApproval. It replaces all fields of the existing TblMDepartmentApproval with the given tblMdepartmentApproval.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMDepartmentApproval if any.
     *
     * @param tblMdepartmentApproval The details of the TblMDepartmentApproval to be updated; value cannot be null.
     * @return The updated TblMDepartmentApproval.
     * @throws EntityNotFoundException if no TblMDepartmentApproval is found with given input.
     */
    TblMDepartmentApproval update(@Valid TblMDepartmentApproval tblMdepartmentApproval);


    /**
     * Partially updates the details of an existing TblMDepartmentApproval. It updates only the
     * fields of the existing TblMDepartmentApproval which are passed in the tblMdepartmentApprovalPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblMDepartmentApproval if any.
     *
     * @param tblmdepartmentapprovalId The id of the TblMDepartmentApproval to be deleted; value cannot be null.
     * @param tblMdepartmentApprovalPatch The partial data of TblMDepartmentApproval which is supposed to be updated; value cannot be null.
     * @return The updated TblMDepartmentApproval.
     * @throws EntityNotFoundException if no TblMDepartmentApproval is found with given input.
     */
    TblMDepartmentApproval partialUpdate(Integer tblmdepartmentapprovalId, Map<String, Object> tblMdepartmentApprovalPatch);

    /**
     * Deletes an existing TblMDepartmentApproval with the given id.
     *
     * @param tblmdepartmentapprovalId The id of the TblMDepartmentApproval to be deleted; value cannot be null.
     * @return The deleted TblMDepartmentApproval.
     * @throws EntityNotFoundException if no TblMDepartmentApproval found with the given id.
     */
    TblMDepartmentApproval delete(Integer tblmdepartmentapprovalId);

    /**
     * Deletes an existing TblMDepartmentApproval with the given object.
     *
     * @param tblMdepartmentApproval The instance of the TblMDepartmentApproval to be deleted; value cannot be null.
     */
    void delete(TblMDepartmentApproval tblMdepartmentApproval);

    /**
     * Find all TblMDepartmentApprovals matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblMDepartmentApprovals.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblMDepartmentApproval> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblMDepartmentApprovals matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblMDepartmentApprovals.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblMDepartmentApproval> findAll(String query, Pageable pageable);

    /**
     * Exports all TblMDepartmentApprovals matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblMDepartmentApprovals matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblMDepartmentApprovals in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblMDepartmentApproval.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}