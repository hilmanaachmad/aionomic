/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.aio_ptp.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.aio_ptp.TblTPoAcceptanceVendor;

/**
 * Service object for domain model class {@link TblTPoAcceptanceVendor}.
 */
public interface TblTPoAcceptanceVendorService {

    /**
     * Creates a new TblTPoAcceptanceVendor. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTPoAcceptanceVendor if any.
     *
     * @param tblTpoAcceptanceVendor Details of the TblTPoAcceptanceVendor to be created; value cannot be null.
     * @return The newly created TblTPoAcceptanceVendor.
     */
    TblTPoAcceptanceVendor create(@Valid TblTPoAcceptanceVendor tblTpoAcceptanceVendor);


	/**
     * Returns TblTPoAcceptanceVendor by given id if exists.
     *
     * @param tbltpoacceptancevendorId The id of the TblTPoAcceptanceVendor to get; value cannot be null.
     * @return TblTPoAcceptanceVendor associated with the given tbltpoacceptancevendorId.
	 * @throws EntityNotFoundException If no TblTPoAcceptanceVendor is found.
     */
    TblTPoAcceptanceVendor getById(Integer tbltpoacceptancevendorId);

    /**
     * Find and return the TblTPoAcceptanceVendor by given id if exists, returns null otherwise.
     *
     * @param tbltpoacceptancevendorId The id of the TblTPoAcceptanceVendor to get; value cannot be null.
     * @return TblTPoAcceptanceVendor associated with the given tbltpoacceptancevendorId.
     */
    TblTPoAcceptanceVendor findById(Integer tbltpoacceptancevendorId);

	/**
     * Find and return the list of TblTPoAcceptanceVendors by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tbltpoacceptancevendorIds The id's of the TblTPoAcceptanceVendor to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TblTPoAcceptanceVendors associated with the given tbltpoacceptancevendorIds.
     */
    List<TblTPoAcceptanceVendor> findByMultipleIds(List<Integer> tbltpoacceptancevendorIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TblTPoAcceptanceVendor. It replaces all fields of the existing TblTPoAcceptanceVendor with the given tblTpoAcceptanceVendor.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTPoAcceptanceVendor if any.
     *
     * @param tblTpoAcceptanceVendor The details of the TblTPoAcceptanceVendor to be updated; value cannot be null.
     * @return The updated TblTPoAcceptanceVendor.
     * @throws EntityNotFoundException if no TblTPoAcceptanceVendor is found with given input.
     */
    TblTPoAcceptanceVendor update(@Valid TblTPoAcceptanceVendor tblTpoAcceptanceVendor);


    /**
     * Partially updates the details of an existing TblTPoAcceptanceVendor. It updates only the
     * fields of the existing TblTPoAcceptanceVendor which are passed in the tblTpoAcceptanceVendorPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TblTPoAcceptanceVendor if any.
     *
     * @param tbltpoacceptancevendorId The id of the TblTPoAcceptanceVendor to be deleted; value cannot be null.
     * @param tblTpoAcceptanceVendorPatch The partial data of TblTPoAcceptanceVendor which is supposed to be updated; value cannot be null.
     * @return The updated TblTPoAcceptanceVendor.
     * @throws EntityNotFoundException if no TblTPoAcceptanceVendor is found with given input.
     */
    TblTPoAcceptanceVendor partialUpdate(Integer tbltpoacceptancevendorId, Map<String, Object> tblTpoAcceptanceVendorPatch);

    /**
     * Deletes an existing TblTPoAcceptanceVendor with the given id.
     *
     * @param tbltpoacceptancevendorId The id of the TblTPoAcceptanceVendor to be deleted; value cannot be null.
     * @return The deleted TblTPoAcceptanceVendor.
     * @throws EntityNotFoundException if no TblTPoAcceptanceVendor found with the given id.
     */
    TblTPoAcceptanceVendor delete(Integer tbltpoacceptancevendorId);

    /**
     * Deletes an existing TblTPoAcceptanceVendor with the given object.
     *
     * @param tblTpoAcceptanceVendor The instance of the TblTPoAcceptanceVendor to be deleted; value cannot be null.
     */
    void delete(TblTPoAcceptanceVendor tblTpoAcceptanceVendor);

    /**
     * Find all TblTPoAcceptanceVendors matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTPoAcceptanceVendors.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TblTPoAcceptanceVendor> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TblTPoAcceptanceVendors matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TblTPoAcceptanceVendors.
     *
     * @see Pageable
     * @see Page
     */
    Page<TblTPoAcceptanceVendor> findAll(String query, Pageable pageable);

    /**
     * Exports all TblTPoAcceptanceVendors matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TblTPoAcceptanceVendors matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TblTPoAcceptanceVendors in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TblTPoAcceptanceVendor.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}