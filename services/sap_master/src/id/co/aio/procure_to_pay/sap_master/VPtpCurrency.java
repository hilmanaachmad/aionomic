/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.sap_master;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * VPtpCurrency generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`v_ptp_currency`")
@IdClass(VPtpCurrencyId.class)
public class VPtpCurrency implements Serializable {

    private String fromCurrency;
    private String kursType;
    private String effectiveDate;
    private Double kurs;
    private String toCurrency;
    private BigDecimal datum;
    private String tahun;
    private String bulan;
    private String tanggal;
    private String date;

    @Id
    @Column(name = "`from_currency`", nullable = false, length = 5)
    public String getFromCurrency() {
        return this.fromCurrency;
    }

    public void setFromCurrency(String fromCurrency) {
        this.fromCurrency = fromCurrency;
    }

    @Id
    @Column(name = "`kurs_type`", nullable = false, length = 4)
    public String getKursType() {
        return this.kursType;
    }

    public void setKursType(String kursType) {
        this.kursType = kursType;
    }

    @Id
    @Column(name = "`effective_date`", nullable = false, length = 10)
    public String getEffectiveDate() {
        return this.effectiveDate;
    }

    public void setEffectiveDate(String effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    @Id
    @Column(name = "`kurs`", nullable = true, scale = 5, precision = 10)
    public Double getKurs() {
        return this.kurs;
    }

    public void setKurs(Double kurs) {
        this.kurs = kurs;
    }

    @Id
    @Column(name = "`to_currency`", nullable = false, length = 5)
    public String getToCurrency() {
        return this.toCurrency;
    }

    public void setToCurrency(String toCurrency) {
        this.toCurrency = toCurrency;
    }

    @Column(name = "`DATUM`", nullable = false, scale = 9, precision = 23)
    public BigDecimal getDatum() {
        return this.datum;
    }

    public void setDatum(BigDecimal datum) {
        this.datum = datum;
    }

    @Column(name = "`TAHUN`", nullable = true, length = 4)
    public String getTahun() {
        return this.tahun;
    }

    public void setTahun(String tahun) {
        this.tahun = tahun;
    }

    @Column(name = "`BULAN`", nullable = true, length = 2)
    public String getBulan() {
        return this.bulan;
    }

    public void setBulan(String bulan) {
        this.bulan = bulan;
    }

    @Column(name = "`TANGGAL`", nullable = true, length = 2)
    public String getTanggal() {
        return this.tanggal;
    }

    public void setTanggal(String tanggal) {
        this.tanggal = tanggal;
    }

    @Column(name = "`DATE`", nullable = true, length = 10)
    public String getDate() {
        return this.date;
    }

    public void setDate(String date) {
        this.date = date;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof VPtpCurrency)) return false;
        final VPtpCurrency vptpCurrency = (VPtpCurrency) o;
        return Objects.equals(getFromCurrency(), vptpCurrency.getFromCurrency()) &&
                Objects.equals(getKursType(), vptpCurrency.getKursType()) &&
                Objects.equals(getEffectiveDate(), vptpCurrency.getEffectiveDate()) &&
                Objects.equals(getKurs(), vptpCurrency.getKurs()) &&
                Objects.equals(getToCurrency(), vptpCurrency.getToCurrency());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getFromCurrency(),
                getKursType(),
                getEffectiveDate(),
                getKurs(),
                getToCurrency());
    }
}