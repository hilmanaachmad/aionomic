/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.sap_master.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.sap_master.T052u;
import id.co.aio.procure_to_pay.sap_master.T052uId;

/**
 * Service object for domain model class {@link T052u}.
 */
public interface T052uService {

    /**
     * Creates a new T052u. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on T052u if any.
     *
     * @param t052u Details of the T052u to be created; value cannot be null.
     * @return The newly created T052u.
     */
    T052u create(@Valid T052u t052u);


	/**
     * Returns T052u by given id if exists.
     *
     * @param t052uId The id of the T052u to get; value cannot be null.
     * @return T052u associated with the given t052uId.
	 * @throws EntityNotFoundException If no T052u is found.
     */
    T052u getById(T052uId t052uId);

    /**
     * Find and return the T052u by given id if exists, returns null otherwise.
     *
     * @param t052uId The id of the T052u to get; value cannot be null.
     * @return T052u associated with the given t052uId.
     */
    T052u findById(T052uId t052uId);

	/**
     * Find and return the list of T052us by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param t052uIds The id's of the T052u to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return T052us associated with the given t052uIds.
     */
    List<T052u> findByMultipleIds(List<T052uId> t052uIds, boolean orderedReturn);


    /**
     * Updates the details of an existing T052u. It replaces all fields of the existing T052u with the given t052u.
     *
     * This method overrides the input field values using Server side or database managed properties defined on T052u if any.
     *
     * @param t052u The details of the T052u to be updated; value cannot be null.
     * @return The updated T052u.
     * @throws EntityNotFoundException if no T052u is found with given input.
     */
    T052u update(@Valid T052u t052u);


    /**
     * Partially updates the details of an existing T052u. It updates only the
     * fields of the existing T052u which are passed in the t052uPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on T052u if any.
     *
     * @param t052uId The id of the T052u to be deleted; value cannot be null.
     * @param t052uPatch The partial data of T052u which is supposed to be updated; value cannot be null.
     * @return The updated T052u.
     * @throws EntityNotFoundException if no T052u is found with given input.
     */
    T052u partialUpdate(T052uId t052uId, Map<String, Object> t052uPatch);

    /**
     * Deletes an existing T052u with the given id.
     *
     * @param t052uId The id of the T052u to be deleted; value cannot be null.
     * @return The deleted T052u.
     * @throws EntityNotFoundException if no T052u found with the given id.
     */
    T052u delete(T052uId t052uId);

    /**
     * Deletes an existing T052u with the given object.
     *
     * @param t052u The instance of the T052u to be deleted; value cannot be null.
     */
    void delete(T052u t052u);

    /**
     * Find all T052us matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching T052us.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<T052u> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all T052us matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching T052us.
     *
     * @see Pageable
     * @see Page
     */
    Page<T052u> findAll(String query, Pageable pageable);

    /**
     * Exports all T052us matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all T052us matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the T052us in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the T052u.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}