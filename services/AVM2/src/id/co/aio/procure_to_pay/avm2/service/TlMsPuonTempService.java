/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.avm2.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.avm2.TlMsPuonTemp;

/**
 * Service object for domain model class {@link TlMsPuonTemp}.
 */
public interface TlMsPuonTempService {

    /**
     * Creates a new TlMsPuonTemp. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsPuonTemp if any.
     *
     * @param tlMsPuonTemp Details of the TlMsPuonTemp to be created; value cannot be null.
     * @return The newly created TlMsPuonTemp.
     */
    TlMsPuonTemp create(@Valid TlMsPuonTemp tlMsPuonTemp);


	/**
     * Returns TlMsPuonTemp by given id if exists.
     *
     * @param tlmspuontempId The id of the TlMsPuonTemp to get; value cannot be null.
     * @return TlMsPuonTemp associated with the given tlmspuontempId.
	 * @throws EntityNotFoundException If no TlMsPuonTemp is found.
     */
    TlMsPuonTemp getById(Integer tlmspuontempId);

    /**
     * Find and return the TlMsPuonTemp by given id if exists, returns null otherwise.
     *
     * @param tlmspuontempId The id of the TlMsPuonTemp to get; value cannot be null.
     * @return TlMsPuonTemp associated with the given tlmspuontempId.
     */
    TlMsPuonTemp findById(Integer tlmspuontempId);

	/**
     * Find and return the list of TlMsPuonTemps by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tlmspuontempIds The id's of the TlMsPuonTemp to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TlMsPuonTemps associated with the given tlmspuontempIds.
     */
    List<TlMsPuonTemp> findByMultipleIds(List<Integer> tlmspuontempIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TlMsPuonTemp. It replaces all fields of the existing TlMsPuonTemp with the given tlMsPuonTemp.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsPuonTemp if any.
     *
     * @param tlMsPuonTemp The details of the TlMsPuonTemp to be updated; value cannot be null.
     * @return The updated TlMsPuonTemp.
     * @throws EntityNotFoundException if no TlMsPuonTemp is found with given input.
     */
    TlMsPuonTemp update(@Valid TlMsPuonTemp tlMsPuonTemp);


    /**
     * Partially updates the details of an existing TlMsPuonTemp. It updates only the
     * fields of the existing TlMsPuonTemp which are passed in the tlMsPuonTempPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsPuonTemp if any.
     *
     * @param tlmspuontempId The id of the TlMsPuonTemp to be deleted; value cannot be null.
     * @param tlMsPuonTempPatch The partial data of TlMsPuonTemp which is supposed to be updated; value cannot be null.
     * @return The updated TlMsPuonTemp.
     * @throws EntityNotFoundException if no TlMsPuonTemp is found with given input.
     */
    TlMsPuonTemp partialUpdate(Integer tlmspuontempId, Map<String, Object> tlMsPuonTempPatch);

    /**
     * Deletes an existing TlMsPuonTemp with the given id.
     *
     * @param tlmspuontempId The id of the TlMsPuonTemp to be deleted; value cannot be null.
     * @return The deleted TlMsPuonTemp.
     * @throws EntityNotFoundException if no TlMsPuonTemp found with the given id.
     */
    TlMsPuonTemp delete(Integer tlmspuontempId);

    /**
     * Deletes an existing TlMsPuonTemp with the given object.
     *
     * @param tlMsPuonTemp The instance of the TlMsPuonTemp to be deleted; value cannot be null.
     */
    void delete(TlMsPuonTemp tlMsPuonTemp);

    /**
     * Find all TlMsPuonTemps matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TlMsPuonTemps.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TlMsPuonTemp> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TlMsPuonTemps matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TlMsPuonTemps.
     *
     * @see Pageable
     * @see Page
     */
    Page<TlMsPuonTemp> findAll(String query, Pageable pageable);

    /**
     * Exports all TlMsPuonTemps matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TlMsPuonTemps matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TlMsPuonTemps in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TlMsPuonTemp.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}