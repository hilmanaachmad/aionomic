/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.avm2.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.DataExportOptions;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import id.co.aio.procure_to_pay.avm2.TlMsCa;

/**
 * Service object for domain model class {@link TlMsCa}.
 */
public interface TlMsCaService {

    /**
     * Creates a new TlMsCa. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsCa if any.
     *
     * @param tlMsCa Details of the TlMsCa to be created; value cannot be null.
     * @return The newly created TlMsCa.
     */
    TlMsCa create(@Valid TlMsCa tlMsCa);


	/**
     * Returns TlMsCa by given id if exists.
     *
     * @param tlmscaId The id of the TlMsCa to get; value cannot be null.
     * @return TlMsCa associated with the given tlmscaId.
	 * @throws EntityNotFoundException If no TlMsCa is found.
     */
    TlMsCa getById(Integer tlmscaId);

    /**
     * Find and return the TlMsCa by given id if exists, returns null otherwise.
     *
     * @param tlmscaId The id of the TlMsCa to get; value cannot be null.
     * @return TlMsCa associated with the given tlmscaId.
     */
    TlMsCa findById(Integer tlmscaId);

	/**
     * Find and return the list of TlMsCas by given id's.
     *
     * If orderedReturn true, the return List is ordered and positional relative to the incoming ids.
     *
     * In case of unknown entities:
     *
     * If enabled, A null is inserted into the List at the proper position(s).
     * If disabled, the nulls are not put into the return List.
     *
     * @param tlmscaIds The id's of the TlMsCa to get; value cannot be null.
     * @param orderedReturn Should the return List be ordered and positional in relation to the incoming ids?
     * @return TlMsCas associated with the given tlmscaIds.
     */
    List<TlMsCa> findByMultipleIds(List<Integer> tlmscaIds, boolean orderedReturn);


    /**
     * Updates the details of an existing TlMsCa. It replaces all fields of the existing TlMsCa with the given tlMsCa.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsCa if any.
     *
     * @param tlMsCa The details of the TlMsCa to be updated; value cannot be null.
     * @return The updated TlMsCa.
     * @throws EntityNotFoundException if no TlMsCa is found with given input.
     */
    TlMsCa update(@Valid TlMsCa tlMsCa);


    /**
     * Partially updates the details of an existing TlMsCa. It updates only the
     * fields of the existing TlMsCa which are passed in the tlMsCaPatch.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TlMsCa if any.
     *
     * @param tlmscaId The id of the TlMsCa to be deleted; value cannot be null.
     * @param tlMsCaPatch The partial data of TlMsCa which is supposed to be updated; value cannot be null.
     * @return The updated TlMsCa.
     * @throws EntityNotFoundException if no TlMsCa is found with given input.
     */
    TlMsCa partialUpdate(Integer tlmscaId, Map<String, Object> tlMsCaPatch);

    /**
     * Deletes an existing TlMsCa with the given id.
     *
     * @param tlmscaId The id of the TlMsCa to be deleted; value cannot be null.
     * @return The deleted TlMsCa.
     * @throws EntityNotFoundException if no TlMsCa found with the given id.
     */
    TlMsCa delete(Integer tlmscaId);

    /**
     * Deletes an existing TlMsCa with the given object.
     *
     * @param tlMsCa The instance of the TlMsCa to be deleted; value cannot be null.
     */
    void delete(TlMsCa tlMsCa);

    /**
     * Find all TlMsCas matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
     *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
     *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TlMsCas.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
     */
    @Deprecated
    Page<TlMsCa> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
     * Find all TlMsCas matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TlMsCas.
     *
     * @see Pageable
     * @see Page
     */
    Page<TlMsCa> findAll(String query, Pageable pageable);

    /**
     * Exports all TlMsCas matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
     */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

    /**
     * Exports all TlMsCas matching the given input query to the given exportType format.
     *
     * @param options The export options provided by the user; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @param outputStream The output stream of the file for the exported data to be written to.
     *
     * @see DataExportOptions
     * @see Pageable
     * @see OutputStream
     */
    void export(DataExportOptions options, Pageable pageable, OutputStream outputStream);

    /**
     * Retrieve the count of the TlMsCas in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
     * @return The count of the TlMsCa.
     */
    long count(String query);

    /**
     * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return Paginated data with included fields.
     *
     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
    Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}