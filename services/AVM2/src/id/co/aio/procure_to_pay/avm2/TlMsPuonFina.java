/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.avm2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * TlMsPuonFina generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`tl_ms_puon_fina`")
public class TlMsPuonFina implements Serializable {

    private Double code;
    private String vendorName;
    private String puon;
    private String vendorCode;

    @Id
    @Column(name = "`code`", nullable = true, scale = 9, precision = 15)
    public Double getCode() {
        return this.code;
    }

    public void setCode(Double code) {
        this.code = code;
    }

    @Column(name = "`VendorName`", nullable = true, length = 255)
    public String getVendorName() {
        return this.vendorName;
    }

    public void setVendorName(String vendorName) {
        this.vendorName = vendorName;
    }

    @Column(name = "`Puon`", nullable = true, length = 255)
    public String getPuon() {
        return this.puon;
    }

    public void setPuon(String puon) {
        this.puon = puon;
    }

    @Column(name = "`VendorCode`", nullable = true, length = 255)
    public String getVendorCode() {
        return this.vendorCode;
    }

    public void setVendorCode(String vendorCode) {
        this.vendorCode = vendorCode;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TlMsPuonFina)) return false;
        final TlMsPuonFina tlMsPuonFina = (TlMsPuonFina) o;
        return Objects.equals(getCode(), tlMsPuonFina.getCode());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCode());
    }
}