/*Copyright (c) 2020-2021 aio.co.id All Rights Reserved.
 This software is the confidential and proprietary information of aio.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with aio.co.id*/
package id.co.aio.procure_to_pay.avm2.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

public class QupdatePasswordRequest implements Serializable {


    @JsonProperty("userName")
    @NotNull
    private String userName;

    @JsonProperty("email")
    @NotNull
    private String email;

    @JsonProperty("password")
    @NotNull
    private String password;

    @JsonProperty("vendorCode")
    @NotNull
    private String vendorCode;

    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getVendorCode() {
        return this.vendorCode;
    }

    public void setVendorCode(String vendorCode) {
        this.vendorCode = vendorCode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QupdatePasswordRequest)) return false;
        final QupdatePasswordRequest qupdatePasswordRequest = (QupdatePasswordRequest) o;
        return Objects.equals(getUserName(), qupdatePasswordRequest.getUserName()) &&
                Objects.equals(getEmail(), qupdatePasswordRequest.getEmail()) &&
                Objects.equals(getPassword(), qupdatePasswordRequest.getPassword()) &&
                Objects.equals(getVendorCode(), qupdatePasswordRequest.getVendorCode());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getUserName(),
                getEmail(),
                getPassword(),
                getVendorCode());
    }
}